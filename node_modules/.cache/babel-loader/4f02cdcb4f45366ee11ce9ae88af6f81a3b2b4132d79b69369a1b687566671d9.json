{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\black\\\\OneDrive\\\\Desktop\\\\Personal Projects\\\\typing-test\\\\src\\\\components\\\\SpeedTypingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SpeedTypingGame.css';\nimport TypingArea from './TypingArea';\nimport { beginner_paragraphs, intermediate_paragraphs, advanced_paragraphs, expert_paragraphs, beginner_randomWords, intermediate_randomWords, advanced_randomWords, expert_randomWords } from './Texts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedTypingGame = () => {\n  _s();\n  const [typingText, setTypingText] = useState('');\n  const [inpFieldValue, setInpFieldValue] = useState('');\n  const [maxTime, setMaxTime] = useState(60);\n  const [timeLeft, setTimeLeft] = useState(maxTime);\n  const [charIndex, setCharIndex] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [isTyping, setIsTyping] = useState(false);\n  const [WPM, setWPM] = useState(0);\n  const [CPM, setCPM] = useState(0);\n  const [timeLimit, setTimeLimit] = useState(60);\n  const [typingMode, setTypingMode] = useState('paragraph');\n  const [difficulty, setDifficulty] = useState('beginner');\n  const [timeIsUp, setTimeIsUp] = useState(false);\n  const loadText = () => {\n    let text;\n    if (typingMode === 'paragraph' && difficulty === 'beginner') {\n      const ranIndex = Math.floor(Math.random() * beginner_paragraphs.length);\n      text = beginner_paragraphs[ranIndex];\n    }\n    if (typingMode === 'paragraph' && difficulty === 'intermediate') {\n      const ranIndex = Math.floor(Math.random() * intermediate_paragraphs.length);\n      text = intermediate_paragraphs[ranIndex];\n    }\n    if (typingMode === 'paragraph' && difficulty === 'advanced') {\n      const ranIndex = Math.floor(Math.random() * advanced_paragraphs.length);\n      text = advanced_paragraphs[ranIndex];\n    }\n    if (typingMode === 'paragraph' && difficulty === 'expert') {\n      const ranIndex = Math.floor(Math.random() * expert_paragraphs.length);\n      text = expert_paragraphs[ranIndex];\n    }\n    if (typingMode === 'randomWords' && difficulty === 'beginner') {\n      const ranIndex = Math.floor(Math.random() * beginner_randomWords.length);\n      text = beginner_randomWords[ranIndex];\n    }\n    if (typingMode === 'randomWords' && difficulty === 'intermediate') {\n      const ranIndex = Math.floor(Math.random() * intermediate_randomWords.length);\n      text = intermediate_randomWords[ranIndex];\n    }\n    if (typingMode === 'randomWords' && difficulty === 'advanced') {\n      const ranIndex = Math.floor(Math.random() * advanced_randomWords.length);\n      text = advanced_randomWords[ranIndex];\n    }\n    if (typingMode === 'randomWords' && difficulty === 'expert') {\n      const ranIndex = Math.floor(Math.random() * expert_randomWords.length);\n      text = expert_randomWords[ranIndex];\n    }\n    const inputField = document.getElementsByClassName('input-field')[0];\n    document.addEventListener(\"keydown\", () => inputField.focus());\n    const content = Array.from(text).map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: letter !== ' ' ? 'black' : 'transparent'\n      },\n      className: `char ${index === 0 ? 'active' : ''}`,\n      children: letter !== ' ' ? letter : '_'\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this));\n    setTypingText(content);\n    setInpFieldValue('');\n    setCharIndex(0);\n    setMistakes(0);\n    setIsTyping(false);\n  };\n  const handleKeyDown = event => {\n    const characters = document.querySelectorAll('.char');\n    if (event.key === 'Backspace' && charIndex > 0 && charIndex < characters.length && timeLeft > 0) {\n      if (characters[charIndex - 1].classList.contains('correct')) {\n        characters[charIndex - 1].classList.remove('correct');\n      }\n      if (characters[charIndex - 1].classList.contains('wrong')) {\n        characters[charIndex - 1].classList.remove('wrong');\n        setMistakes(mistakes - 1);\n      }\n      if (characters[charIndex]) {\n        characters[charIndex].classList.remove('active');\n      }\n      if (characters[charIndex - 1]) {\n        characters[charIndex - 1].classList.add('active');\n      }\n      setCharIndex(charIndex - 1);\n      let cpm = (charIndex - mistakes - 1) * (60 / (maxTime - timeLeft));\n      cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\n      setCPM(parseInt(cpm, 10));\n      let wpm = Math.round((charIndex - mistakes) / 5 / (maxTime - timeLeft) * 60);\n      wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\n      setWPM(wpm);\n    }\n  };\n  const initTyping = event => {\n    const characters = document.querySelectorAll('.char');\n    let typedChar = event.target.value;\n    if (charIndex < characters.length && timeLeft > 0) {\n      let currentChar = characters[charIndex].innerText;\n      if (currentChar === '_') currentChar = ' ';\n      if (!isTyping) {\n        setIsTyping(true);\n      }\n      if (typedChar === currentChar) {\n        setCharIndex(charIndex + 1);\n        if (charIndex + 1 < characters.length) characters[charIndex + 1].classList.add('active');\n        characters[charIndex].classList.remove('active');\n        characters[charIndex].classList.add('correct');\n      } else {\n        setCharIndex(charIndex + 1);\n        setMistakes(mistakes + 1);\n        characters[charIndex].classList.remove('active');\n        if (charIndex + 1 < characters.length) characters[charIndex + 1].classList.add('active');\n        characters[charIndex].classList.add('wrong');\n      }\n      if (charIndex === characters.length - 1) setIsTyping(false);\n      let wpm = Math.round((charIndex - mistakes) / 5 / (maxTime - timeLeft) * 60);\n      wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\n      setWPM(wpm);\n      let cpm = (charIndex - mistakes) * (60 / (maxTime - timeLeft));\n      cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\n      setCPM(parseInt(cpm, 10));\n    } else {\n      setIsTyping(false);\n    }\n  };\n  const resetGame = () => {\n    setIsTyping(false);\n    setTimeLeft(maxTime);\n    setCharIndex(0);\n    setMistakes(0);\n    setTypingText('');\n    setCPM(0);\n    setWPM(0);\n    setTimeIsUp(false);\n    const characters = document.querySelectorAll('.char');\n    characters.forEach(span => {\n      span.classList.remove(\"correct\");\n      span.classList.remove(\"wrong\");\n      span.classList.remove(\"active\");\n    });\n    characters[0].classList.add('active');\n    loadText();\n  };\n  const TimeLimitSelector = ({\n    onChange\n  }) => {\n    const timeLimits = [120, 90, 60, 30, 15];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-limit-selector\",\n      children: timeLimits.map(limit => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onChange(limit),\n        children: [limit, \"s\"]\n      }, limit, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  };\n  const DifficultySelector = ({\n    onChange,\n    value\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => onChange(e.target.value),\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"beginner\",\n        children: \"Beginner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"intermediate\",\n        children: \"Intermediate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"advanced\",\n        children: \"Advanced\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"expert\",\n        children: \"Expert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  };\n  const getSelectedText = () => {\n    let modeText = typingMode === 'paragraph' ? 'Paragraph' : 'Random Words';\n    let difficultyText = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n    return `${difficultyText} ${modeText}`;\n  };\n  const handleTimeLimitChange = newLimit => {\n    setMaxTime(newLimit);\n    setTimeLimit(newLimit);\n    setTimeLeft(newLimit);\n    resetGame();\n  };\n  useEffect(() => {\n    setTimeLeft(timeLimit);\n  }, [timeLimit]);\n  useEffect(() => {\n    loadText();\n  }, [typingMode, difficulty]);\n  useEffect(() => {\n    let interval;\n    if (isTyping && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n        let cpm = (charIndex - mistakes) * (60 / (maxTime - timeLeft));\n        cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\n        setCPM(parseInt(cpm, 10));\n        let wpm = Math.round((charIndex - mistakes) / 5 / (maxTime - timeLeft) * 60);\n        wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\n        setWPM(wpm);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      clearInterval(interval);\n      setIsTyping(false);\n      setTimeIsUp(true);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isTyping, timeLeft]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setIsTyping(false);\n      setTimeIsUp(true);\n    }\n  }, [timeLeft]);\n  useEffect(() => {\n    if (timeIsUp) {\n      setInpFieldValue(\"Time's Up! Check out your stats below!\");\n    }\n  }, [timeIsUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Limit: \", timeLimit, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimeLimitSelector, {\n      onChange: handleTimeLimitChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Text: \", getSelectedText()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTypingMode('paragraph'),\n        children: \"Paragraph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTypingMode('randomWords'),\n        children: \"Random Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DifficultySelector, {\n        onChange: newDifficulty => setDifficulty(newDifficulty),\n        value: difficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-field\",\n      value: inpFieldValue,\n      onChange: initTyping,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), isTyping == false && timeLeft > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Congratulations! Check out your stats below!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), timeLeft === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Time's Up! Check out your stats below!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(TypingArea, {\n      typingText: typingText,\n      inpFieldValue: inpFieldValue,\n      timeLimit: timeLimit,\n      timeLeft: timeLeft,\n      mistakes: mistakes,\n      WPM: WPM,\n      CPM: CPM,\n      initTyping: initTyping,\n      handleKeyDown: handleKeyDown,\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(SpeedTypingGame, \"yGjM3EVf+53vByabVAeK3VFSnQ0=\");\n_c = SpeedTypingGame;\nexport default SpeedTypingGame;\nvar _c;\n$RefreshReg$(_c, \"SpeedTypingGame\");","map":{"version":3,"names":["React","useEffect","useState","TypingArea","beginner_paragraphs","intermediate_paragraphs","advanced_paragraphs","expert_paragraphs","beginner_randomWords","intermediate_randomWords","advanced_randomWords","expert_randomWords","jsxDEV","_jsxDEV","SpeedTypingGame","_s","typingText","setTypingText","inpFieldValue","setInpFieldValue","maxTime","setMaxTime","timeLeft","setTimeLeft","charIndex","setCharIndex","mistakes","setMistakes","isTyping","setIsTyping","WPM","setWPM","CPM","setCPM","timeLimit","setTimeLimit","typingMode","setTypingMode","difficulty","setDifficulty","timeIsUp","setTimeIsUp","loadText","text","ranIndex","Math","floor","random","length","inputField","document","getElementsByClassName","addEventListener","focus","content","Array","from","map","letter","index","style","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleKeyDown","event","characters","querySelectorAll","key","classList","contains","remove","add","cpm","Infinity","parseInt","wpm","round","initTyping","typedChar","target","value","currentChar","innerText","resetGame","forEach","span","TimeLimitSelector","onChange","timeLimits","limit","onClick","DifficultySelector","e","getSelectedText","modeText","difficultyText","charAt","toUpperCase","slice","handleTimeLimitChange","newLimit","interval","setInterval","clearInterval","newDifficulty","type","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/black/OneDrive/Desktop/Personal Projects/typing-test/src/components/SpeedTypingGame.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './SpeedTypingGame.css';\r\nimport TypingArea from './TypingArea';\r\nimport { beginner_paragraphs, intermediate_paragraphs,\r\nadvanced_paragraphs, expert_paragraphs, beginner_randomWords,\r\nintermediate_randomWords, advanced_randomWords, expert_randomWords } from './Texts'\r\n\r\nconst SpeedTypingGame = () => {\r\n\r\n    const [typingText, setTypingText] = useState('');\r\n    const [inpFieldValue, setInpFieldValue] = useState('');\r\n    const [maxTime, setMaxTime] = useState(60);\r\n    const [timeLeft, setTimeLeft] = useState(maxTime);\r\n    const [charIndex, setCharIndex] = useState(0);\r\n    const [mistakes, setMistakes] = useState(0);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [WPM, setWPM] = useState(0);\r\n    const [CPM, setCPM] = useState(0);\r\n    const [timeLimit, setTimeLimit] = useState(60);\r\n    const [typingMode, setTypingMode] = useState('paragraph');\r\n    const [difficulty, setDifficulty] = useState('beginner');\r\n    const [timeIsUp, setTimeIsUp] = useState(false);\r\n\r\n\r\n    const loadText = () => {\r\n        let text;\r\n        if (typingMode === 'paragraph' && difficulty === 'beginner') {\r\n            const ranIndex = Math.floor(Math.random() * beginner_paragraphs.length);\r\n            text = beginner_paragraphs[ranIndex];\r\n        }\r\n        if (typingMode === 'paragraph' && difficulty === 'intermediate') {\r\n            const ranIndex = Math.floor(Math.random() * intermediate_paragraphs.length);\r\n            text = intermediate_paragraphs[ranIndex]\r\n        }\r\n        if (typingMode === 'paragraph' && difficulty === 'advanced') {\r\n            const ranIndex = Math.floor(Math.random() * advanced_paragraphs.length);\r\n            text = advanced_paragraphs[ranIndex];\r\n        }\r\n        if (typingMode === 'paragraph' && difficulty === 'expert') {\r\n            const ranIndex = Math.floor(Math.random() * expert_paragraphs.length);\r\n            text = expert_paragraphs[ranIndex]\r\n        }\r\n\r\n        if (typingMode === 'randomWords' && difficulty === 'beginner') {\r\n            const ranIndex = Math.floor(Math.random() * beginner_randomWords.length);\r\n            text = beginner_randomWords[ranIndex];\r\n        }\r\n        if (typingMode === 'randomWords' && difficulty === 'intermediate') {\r\n            const ranIndex = Math.floor(Math.random() * intermediate_randomWords.length);\r\n            text = intermediate_randomWords[ranIndex]\r\n        }\r\n        if (typingMode === 'randomWords' && difficulty === 'advanced') {\r\n            const ranIndex = Math.floor(Math.random() * advanced_randomWords.length);\r\n            text = advanced_randomWords[ranIndex];\r\n        }\r\n        if (typingMode === 'randomWords' && difficulty === 'expert') {\r\n            const ranIndex = Math.floor(Math.random() * expert_randomWords.length);\r\n            text = expert_randomWords[ranIndex]\r\n        }\r\n\r\n        const inputField = document.getElementsByClassName('input-field')[0];\r\n        document.addEventListener(\"keydown\", () => inputField.focus());\r\n\r\n        const content = Array.from(text).map((letter, index) => (\r\n            <span key={index} style={{ color: (letter !== ' ') ? 'black' : 'transparent' }}\r\n            className={`char ${index === 0 ? 'active' : ''}`}>\r\n                {(letter !== ' ') ? letter : '_'}\r\n            </span>\r\n        ));\r\n        setTypingText(content);\r\n        setInpFieldValue('');\r\n        setCharIndex(0);\r\n        setMistakes(0);\r\n        setIsTyping(false);\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        const characters = document.querySelectorAll('.char');\r\n        if (event.key === 'Backspace' && charIndex > 0 && charIndex < characters.length && timeLeft > 0) {\r\n            if (characters[charIndex - 1].classList.contains('correct')) {\r\n                characters[charIndex - 1].classList.remove('correct');\r\n            }\r\n            if (characters[charIndex - 1].classList.contains('wrong')) {\r\n                characters[charIndex - 1].classList.remove('wrong');\r\n                setMistakes(mistakes - 1);\r\n            }\r\n            if (characters[charIndex]) {\r\n                characters[charIndex].classList.remove('active');\r\n            }\r\n            if (characters[charIndex - 1]) {\r\n                characters[charIndex - 1].classList.add('active');\r\n            }\r\n            \r\n            setCharIndex(charIndex - 1);\r\n            let cpm = (charIndex - mistakes - 1) * (60 / (maxTime - timeLeft));\r\n            cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\r\n            setCPM(parseInt(cpm, 10));\r\n            let wpm = Math.round(((charIndex - mistakes) / 5) / (maxTime - timeLeft) * 60);\r\n            wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\r\n            setWPM(wpm);\r\n        }\r\n    }\r\n\r\n    const initTyping = (event) => {\r\n        const characters = document.querySelectorAll('.char');\r\n        let typedChar = event.target.value;\r\n        if (charIndex < characters.length && timeLeft > 0) {\r\n            let currentChar = characters[charIndex].innerText;\r\n            if (currentChar === '_') currentChar = ' ';\r\n            if (!isTyping) {\r\n                setIsTyping(true);\r\n            }\r\n            if (typedChar === currentChar) {\r\n                setCharIndex(charIndex + 1);\r\n        if (charIndex + 1 < characters.length) characters[charIndex + 1].classList.add('active');\r\n                characters[charIndex].classList.remove('active');\r\n                characters[charIndex].classList.add('correct');\r\n            } else {\r\n                setCharIndex(charIndex + 1);\r\n                setMistakes(mistakes + 1);\r\n                characters[charIndex].classList.remove('active');\r\n        if (charIndex + 1 < characters.length) characters[charIndex + 1].classList.add('active');\r\n                characters[charIndex].classList.add('wrong');\r\n            }\r\n\r\n            if (charIndex === characters.length - 1) setIsTyping(false);\r\n\r\n            let wpm = Math.round(((charIndex - mistakes) / 5) / (maxTime - timeLeft) * 60);\r\n            wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\r\n            setWPM(wpm);\r\n\r\n            let cpm = (charIndex - mistakes) * (60 / (maxTime - timeLeft));\r\n            cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\r\n            setCPM(parseInt(cpm, 10));\r\n        } else {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setIsTyping(false);\r\n        setTimeLeft(maxTime);\r\n        setCharIndex(0);\r\n        setMistakes(0);\r\n        setTypingText('');\r\n        setCPM(0);\r\n        setWPM(0);\r\n        setTimeIsUp(false);\r\n        const characters = document.querySelectorAll('.char');\r\n        characters.forEach(span => {\r\n            span.classList.remove(\"correct\");\r\n            span.classList.remove(\"wrong\");\r\n            span.classList.remove(\"active\");\r\n        });\r\n        characters[0].classList.add('active');\r\n        loadText();\r\n    };\r\n\r\n    const TimeLimitSelector = ({ onChange }) => {\r\n        const timeLimits = [120, 90, 60, 30, 15];\r\n\r\n        return (\r\n            <div className='time-limit-selector'>\r\n                {timeLimits.map((limit) => (\r\n                    <button key={limit} onClick={() => onChange(limit)}>\r\n                        {limit}s\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const DifficultySelector = ({ onChange, value }) => {\r\n        return (\r\n            <select onChange={(e) => onChange(e.target.value)} value={value}>\r\n                <option value='beginner'>Beginner</option>\r\n                <option value='intermediate'>Intermediate</option>\r\n                <option value='advanced'>Advanced</option>\r\n                <option value='expert'>Expert</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n    const getSelectedText = () => {\r\n        let modeText = typingMode === 'paragraph' ? 'Paragraph' : 'Random Words';\r\n        let difficultyText = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\r\n        return (`${difficultyText} ${modeText}`)\r\n    }\r\n\r\n    const handleTimeLimitChange = (newLimit) => {\r\n        setMaxTime(newLimit);\r\n        setTimeLimit(newLimit);\r\n        setTimeLeft(newLimit);\r\n        resetGame();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeLeft(timeLimit);\r\n    }, [timeLimit])\r\n\r\n    useEffect(() => {\r\n        loadText();\r\n    }, [typingMode, difficulty]);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isTyping && timeLeft > 0) {\r\n            interval = setInterval(() => {\r\n                setTimeLeft(timeLeft - 1);\r\n                let cpm = (charIndex - mistakes) * (60 / (maxTime - timeLeft));\r\n                cpm = cpm < 0 || !cpm || cpm === Infinity ? 0 : cpm;\r\n                setCPM(parseInt(cpm, 10));\r\n                let wpm = Math.round(((charIndex - mistakes) / 5) / (maxTime - timeLeft) * 60);\r\n                wpm = wpm < 0 || !wpm || wpm === Infinity ? 0 : wpm;\r\n                setWPM(wpm);\r\n            }, 1000);\r\n        } else if (timeLeft === 0) {\r\n            clearInterval(interval);\r\n            setIsTyping(false);\r\n            setTimeIsUp(true);\r\n        }\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [isTyping, timeLeft]);\r\n\r\n    useEffect(() => {\r\n        if (timeLeft === 0) {\r\n            setIsTyping(false);\r\n            setTimeIsUp(true);\r\n        }\r\n    }, [timeLeft])\r\n\r\n    useEffect(() => {\r\n        if (timeIsUp) {\r\n            setInpFieldValue(\"Time's Up! Check out your stats below!\")\r\n        }\r\n    }, [timeIsUp]);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <p>Time Limit: {timeLimit}s</p>\r\n            <TimeLimitSelector onChange={handleTimeLimitChange} />\r\n            <p>\r\n                Selected Text: {getSelectedText()}\r\n            </p>\r\n            <div className='text-selector'>\r\n                <button onClick={() => setTypingMode('paragraph')}>Paragraph</button>\r\n                <button onClick={() => setTypingMode('randomWords')}>Random Words</button>\r\n                <DifficultySelector \r\n                onChange={(newDifficulty) => setDifficulty(newDifficulty)} \r\n                value={difficulty}\r\n            />            \r\n            </div>\r\n            <input\r\n                type='text'\r\n                className='input-field'\r\n                value={inpFieldValue}\r\n                onChange={initTyping}\r\n                onKeyDown={handleKeyDown}\r\n            />\r\n\r\n            {(isTyping == false) && timeLeft > 0 &&(\r\n                <p>Congratulations! Check out your stats below!</p>\r\n            )}\r\n\r\n            {timeLeft === 0 && <p>Time's Up! Check out your stats below!</p>}\r\n\r\n            \r\n            <TypingArea\r\n                typingText={typingText}\r\n                inpFieldValue={inpFieldValue}\r\n                timeLimit={timeLimit}\r\n                timeLeft={timeLeft}\r\n                mistakes={mistakes}\r\n                WPM={WPM}\r\n                CPM={CPM}\r\n                initTyping={initTyping}\r\n                handleKeyDown={handleKeyDown}\r\n                resetGame={resetGame}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpeedTypingGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}